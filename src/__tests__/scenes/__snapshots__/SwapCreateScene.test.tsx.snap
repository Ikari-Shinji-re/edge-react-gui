// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SwapCreateScene should render with loading props 1`] = `
[
  <BVLinearGradient
    colors={
      [
        4279900698,
        4279900698,
      ]
    }
    endPoint={
      {
        "x": 1,
        "y": 1,
      }
    }
    locations={null}
    onLayout={[Function]}
    startPoint={
      {
        "x": 0,
        "y": 0,
      }
    }
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="0"
      bbWidth="0"
      focusable={false}
      height={0}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        }
      }
      vbHeight={0}
      vbWidth={0}
      width={0}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
      >
        <RNSVGDefs>
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -1,
                0.125,
                -167772161,
                0.25,
                -637534209,
                0.75,
                654311423,
                0.875,
                184549375,
                1,
                16777215,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad0"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -216279,
                0.0588,
                -216279,
                0.1765,
                -167988439,
                0.29410000000000003,
                -637750487,
                0.7646999999999999,
                654095145,
                0.8824,
                184333097,
                1,
                16560937,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad1"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -16719740,
                0.4667,
                -16719740,
                0.5333,
                -184491900,
                0.6,
                -654253948,
                0.8667,
                637591684,
                0.9333,
                167829636,
                1,
                57476,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad2"
            rx="50%"
            ry="50%"
          />
        </RNSVGDefs>
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          opacity={0.1}
        >
          <RNSVGCircle
            cx="10%"
            cy="10%"
            fill={
              {
                "brushRef": "grad0",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="224.73239436619718"
          />
          <RNSVGCircle
            cx="95%"
            cy="30%"
            fill={
              {
                "brushRef": "grad1",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="238.7781690140845"
          />
          <RNSVGCircle
            cx="-15%"
            cy="100%"
            fill={
              {
                "brushRef": "grad2",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="421.37323943661977"
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </BVLinearGradient>,
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      {
        "paddingBottom": 74.85492957746479,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 64,
      }
    }
    keyboardShouldPersistTaps="handled"
    onScroll={[Function]}
    scrollEventThrottle={0.0001}
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
    style={
      {
        "height": 1334,
        "maxHeight": 1334,
        "padding": 11,
        "width": 750,
      }
    }
  >
    <View>
      <View
        entering={BaseAnimationMock {}}
        layout={BaseAnimationMock {}}
        style={
          {
            "marginLeft": -11,
            "marginVertical": 22,
            "width": "100%",
          }
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "marginHorizontal": 22,
                "paddingBottom": 22,
              },
              null,
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  {
                    "fontFamily": "Quicksand-Medium",
                    "fontSize": 27,
                  },
                  null,
                ]
              }
            >
              Exchange
            </Text>
          </View>
        </View>
        <BVLinearGradient
          colors={
            [
              452984831,
              452984831,
            ]
          }
          endPoint={
            {
              "x": 1,
              "y": 0.5,
            }
          }
          locations={null}
          startPoint={
            {
              "x": 0,
              "y": 0.5,
            }
          }
          style={
            [
              {
                "alignSelf": "stretch",
                "height": 1,
              },
              {
                "marginBottom": 0,
                "marginLeft": 22,
                "marginRight": 0,
                "marginTop": 0,
              },
            ]
          }
        />
      </View>
      <View
        entering={BaseAnimationMock {}}
        layout={BaseAnimationMock {}}
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.65}
          numberOfLines={1}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              {
                "alignSelf": "flex-start",
                "marginHorizontal": 22,
              },
              null,
            ]
          }
        >
          I have 
        </Text>
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "borderRadius": 16,
              },
              {
                "marginBottom": 11,
                "marginLeft": 11,
                "marginRight": 11,
                "marginTop": 11,
              },
              {
                "paddingBottom": 11,
                "paddingLeft": 11,
                "paddingRight": 11,
                "paddingTop": 11,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "backgroundColor": "rgba(255, 255, 255, .1)",
                "borderRadius": 16,
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": undefined,
                  "flex": undefined,
                  "flexDirection": "row",
                  "justifyContent": undefined,
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 100,
                  "flexDirection": "row",
                  "margin": 11,
                  "opacity": 1,
                  "paddingHorizontal": 17,
                  "paddingVertical": 11,
                }
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                minimumFontScale={0.65}
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Quicksand-Regular",
                      "fontSize": 22,
                      "includeFontPadding": false,
                    },
                    {
                      "fontSize": 22,
                      "lineHeight": 34,
                    },
                    null,
                  ]
                }
              >
                Select Source Wallet
              </Text>
              <Text
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 22,
                    },
                    {
                      "color": "#00f1a2",
                      "marginLeft": 22,
                      "marginRight": 6,
                      "textAlign": "center",
                    },
                    {
                      "fontFamily": "FontAwesome5Free-Solid",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {
                      "fontWeight": "900",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "margin": 11,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              disableAnimation={
                {
                  "value": 0,
                }
              }
              focusAnimation={
                {
                  "value": 0,
                }
              }
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "borderRadius": 11,
                    "borderWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  },
                  {
                    "backgroundColor": undefined,
                    "borderColor": undefined,
                  },
                ]
              }
            >
              <View
                animatedValue={
                  {
                    "value": 1,
                  }
                }
                pointerEvents="none"
                style={
                  [
                    {
                      "backfaceVisibility": "hidden",
                      "paddingHorizontal": 22,
                      "paddingVertical": 11,
                    },
                    {
                      "transform": [
                        {
                          "rotateX": "undefineddeg",
                        },
                      ],
                    },
                  ]
                }
              >
                <Text
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": true,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessible={true}
                  adjustsFontSizeToFit={true}
                  focusable={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "alignSelf": "flex-start",
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 18,
                        "includeFontPadding": false,
                      },
                    ]
                  }
                >
                  Tap "Next" for Quote
                </Text>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCorrect={false}
                    autoFocus={false}
                    disableAnimation={
                      {
                        "value": 0,
                      }
                    }
                    editable={false}
                    focusAnimation={
                      {
                        "value": 0,
                      }
                    }
                    keyboardType="decimal-pad"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onSubmitEditing={[Function]}
                    returnKeyType="done"
                    style={
                      [
                        {
                          "fontFamily": "Quicksand-Medium",
                          "fontSize": 34,
                          "includeFontPadding": false,
                          "marginRight": 0,
                          "padding": 0,
                        },
                        {
                          "color": undefined,
                        },
                      ]
                    }
                    value=""
                  />
                  <Text
                    style={
                      {
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Medium",
                        "fontSize": 34,
                        "includeFontPadding": false,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    Tap to edit
                  </Text>
                </View>
              </View>
              <View
                animatedValue={
                  {
                    "value": 1,
                  }
                }
                pointerEvents="auto"
                style={
                  [
                    {
                      "backfaceVisibility": "hidden",
                      "bottom": 0,
                      "left": 0,
                      "paddingHorizontal": 22,
                      "paddingVertical": 11,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    {
                      "transform": [
                        {
                          "rotateX": "undefineddeg",
                        },
                      ],
                    },
                  ]
                }
              >
                <Text
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": true,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessible={true}
                  adjustsFontSizeToFit={true}
                  focusable={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "alignSelf": "flex-start",
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 18,
                        "includeFontPadding": false,
                      },
                    ]
                  }
                >
                  Tap "Next" for Quote
                </Text>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCorrect={false}
                    autoFocus={false}
                    disableAnimation={
                      {
                        "value": 0,
                      }
                    }
                    editable={false}
                    focusAnimation={
                      {
                        "value": 0,
                      }
                    }
                    keyboardType="decimal-pad"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onSubmitEditing={[Function]}
                    returnKeyType="done"
                    style={
                      [
                        {
                          "fontFamily": "Quicksand-Medium",
                          "fontSize": 34,
                          "includeFontPadding": false,
                          "marginRight": 0,
                          "padding": 0,
                        },
                        {
                          "color": undefined,
                        },
                      ]
                    }
                    value=""
                  />
                  <Text
                    style={
                      {
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Medium",
                        "fontSize": 34,
                        "includeFontPadding": false,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    Tap to edit
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={false}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 0,
                  "paddingTop": 11,
                }
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    {
                      "color": "#00f1a2",
                      "fontSize": 34,
                    },
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "hsla(0, 0%, 100%, 0.20)",
                "borderRadius": 28,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 17,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 11,
                "minHeight": 42,
                "minWidth": 126,
                "opacity": 0.7,
                "padding": 7,
              }
            }
          >
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.75}
              numberOfLines={1}
              style={
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Bold",
                  "fontSize": 14,
                  "marginHorizontal": 7,
                }
              }
            >
              MAX
            </Text>
          </View>
        </View>
      </View>
      <View
        layout={BaseAnimationMock {}}
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 11,
              "paddingHorizontal": 11,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "rgba(255, 255, 255, .1)",
                "borderBottomWidth": 1,
                "flex": 1,
              }
            }
          />
          <Text
            adjustsFontSizeToFit={true}
            minimumFontScale={0.65}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                [
                  {
                    "color": "#3dd9f4",
                    "fontFamily": "Quicksand-Medium",
                    "fontSize": 22,
                    "paddingHorizontal": 17,
                  },
                  {
                    "textTransform": "lowercase",
                  },
                ],
                null,
              ]
            }
          >
            To
          </Text>
          <View
            style={
              {
                "borderBottomColor": "rgba(255, 255, 255, .1)",
                "borderBottomWidth": 1,
                "flex": 1,
              }
            }
          />
        </View>
      </View>
      <View
        entering={BaseAnimationMock {}}
        layout={BaseAnimationMock {}}
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.65}
          numberOfLines={1}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              {
                "alignSelf": "flex-start",
                "marginHorizontal": 22,
              },
              null,
            ]
          }
        >
          I want
        </Text>
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "borderRadius": 16,
              },
              {
                "marginBottom": 11,
                "marginLeft": 11,
                "marginRight": 11,
                "marginTop": 11,
              },
              {
                "paddingBottom": 11,
                "paddingLeft": 11,
                "paddingRight": 11,
                "paddingTop": 11,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "backgroundColor": "rgba(255, 255, 255, .1)",
                "borderRadius": 16,
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": undefined,
                  "flex": undefined,
                  "flexDirection": "row",
                  "justifyContent": undefined,
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 100,
                  "flexDirection": "row",
                  "margin": 11,
                  "opacity": 1,
                  "paddingHorizontal": 17,
                  "paddingVertical": 11,
                }
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                minimumFontScale={0.65}
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Quicksand-Regular",
                      "fontSize": 22,
                      "includeFontPadding": false,
                    },
                    {
                      "fontSize": 22,
                      "lineHeight": 34,
                    },
                    null,
                  ]
                }
              >
                Select Receiving Wallet
              </Text>
              <Text
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 22,
                    },
                    {
                      "color": "#00f1a2",
                      "marginLeft": 22,
                      "marginRight": 6,
                      "textAlign": "center",
                    },
                    {
                      "fontFamily": "FontAwesome5Free-Solid",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {
                      "fontWeight": "900",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "margin": 11,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              disableAnimation={
                {
                  "value": 0,
                }
              }
              focusAnimation={
                {
                  "value": 0,
                }
              }
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "borderRadius": 11,
                    "borderWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  },
                  {
                    "backgroundColor": undefined,
                    "borderColor": undefined,
                  },
                ]
              }
            >
              <View
                animatedValue={
                  {
                    "value": 1,
                  }
                }
                pointerEvents="none"
                style={
                  [
                    {
                      "backfaceVisibility": "hidden",
                      "paddingHorizontal": 22,
                      "paddingVertical": 11,
                    },
                    {
                      "transform": [
                        {
                          "rotateX": "undefineddeg",
                        },
                      ],
                    },
                  ]
                }
              >
                <Text
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": true,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessible={true}
                  adjustsFontSizeToFit={true}
                  focusable={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "alignSelf": "flex-start",
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 18,
                        "includeFontPadding": false,
                      },
                    ]
                  }
                >
                  Tap "Next" for Quote
                </Text>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCorrect={false}
                    autoFocus={false}
                    disableAnimation={
                      {
                        "value": 0,
                      }
                    }
                    editable={false}
                    focusAnimation={
                      {
                        "value": 0,
                      }
                    }
                    keyboardType="decimal-pad"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onSubmitEditing={[Function]}
                    returnKeyType="done"
                    style={
                      [
                        {
                          "fontFamily": "Quicksand-Medium",
                          "fontSize": 34,
                          "includeFontPadding": false,
                          "marginRight": 0,
                          "padding": 0,
                        },
                        {
                          "color": undefined,
                        },
                      ]
                    }
                    value=""
                  />
                  <Text
                    style={
                      {
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Medium",
                        "fontSize": 34,
                        "includeFontPadding": false,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    Tap to edit
                  </Text>
                </View>
              </View>
              <View
                animatedValue={
                  {
                    "value": 1,
                  }
                }
                pointerEvents="auto"
                style={
                  [
                    {
                      "backfaceVisibility": "hidden",
                      "bottom": 0,
                      "left": 0,
                      "paddingHorizontal": 22,
                      "paddingVertical": 11,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    {
                      "transform": [
                        {
                          "rotateX": "undefineddeg",
                        },
                      ],
                    },
                  ]
                }
              >
                <Text
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": true,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessible={true}
                  adjustsFontSizeToFit={true}
                  focusable={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "alignSelf": "flex-start",
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 18,
                        "includeFontPadding": false,
                      },
                    ]
                  }
                >
                  Tap "Next" for Quote
                </Text>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCorrect={false}
                    autoFocus={false}
                    disableAnimation={
                      {
                        "value": 0,
                      }
                    }
                    editable={false}
                    focusAnimation={
                      {
                        "value": 0,
                      }
                    }
                    keyboardType="decimal-pad"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onSubmitEditing={[Function]}
                    returnKeyType="done"
                    style={
                      [
                        {
                          "fontFamily": "Quicksand-Medium",
                          "fontSize": 34,
                          "includeFontPadding": false,
                          "marginRight": 0,
                          "padding": 0,
                        },
                        {
                          "color": undefined,
                        },
                      ]
                    }
                    value=""
                  />
                  <Text
                    style={
                      {
                        "color": "rgba(255, 255, 255, .5)",
                        "fontFamily": "Quicksand-Medium",
                        "fontSize": 34,
                        "includeFontPadding": false,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    Tap to edit
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={false}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 0,
                  "paddingTop": 11,
                }
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    {
                      "color": "#00f1a2",
                      "fontSize": 34,
                    },
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        entering={BaseAnimationMock {}}
        layout={BaseAnimationMock {}}
      />
      <View
        entering={BaseAnimationMock {}}
        layout={BaseAnimationMock {}}
      />
    </View>
  </RCTScrollView>,
  <View
    footerHeight={0}
    footerOpenRatio={
      {
        "value": 1,
      }
    }
    hasTabs={true}
    insetBottom={0}
    onLayout={[Function]}
    style={
      [
        {
          "alignSelf": "center",
          "bottom": 0,
          "justifyContent": "flex-end",
          "paddingHorizontal": 11,
          "position": "absolute",
        },
        {
          "transform": [
            {
              "translateY": NaN,
            },
          ],
        },
      ]
    }
  />,
]
`;
